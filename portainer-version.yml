version: "3.8"
services:
  proxy:
    image: reallibrephotos/librephotos-proxy:latest
    container_name: proxy
    restart: unless-stopped
    volumes:
      - /volume1/photo/Justice-AnimalCameras:/data
      - /volume2/docker/librephotos/protected_media:/protected_media
    ports:
      - 8025:80
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:13
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=librephotos
      - POSTGRES_PASSWORD=librephotos
      - POSTGRES_DB=librephotos
    volumes:
      - /volume2/docker/librephotos/db:/var/lib/postgresql/data
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    healthcheck:
      test: psql -U librephotos -d librephotos -c "SELECT 1;"
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    image: reallibrephotos/librephotos-frontend:latest
    container_name: frontend
    restart: unless-stopped

  backend:
    image: reallibrephotos/librephotos:latest
    container_name: backend
    restart: unless-stopped
    volumes:
      - /volume1/photo/Justice-AnimalCameras:/data
      - /volume2/docker/librephotos/protected_media:/protected_media
      - /volume2/docker/librephotos/logs:/logs
      - /volume2/docker/librephotos/cache:/root/.cache
    environment:
      - SECRET_KEY=${shhhhKey:-}
      - BACKEND_HOST=backend
      - ADMIN_EMAIL=gabrielpc1190@gmail.com
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=r4@aT!W&d2VCKQ
      - DB_BACKEND=postgresql
      - DB_NAME=librephotos
      - DB_USER=librephotos
      - DB_PASS=librephotos
      - DB_HOST=db
      - DB_PORT=5432
      - MAPBOX_API_KEY=${mapApiKey:-}
      - WEB_CONCURRENCY=${gunniWorkers:-1}
      - SKIP_PATTERNS=${skipPatterns:-}
      - ALLOW_UPLOAD=${allowUpload:-false}
      - CSRF_TRUSTED_ORIGINS=${csrfTrustedOrigins:-}
      - DEBUG=0
      - HEAVYWEIGHT_PROCESS=${HEAVYWEIGHT_PROCESS:-}
    depends_on:
      db:
        condition: service_healthy
